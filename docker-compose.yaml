services:
  # Database migration and seeding service
  db-setup:
    build:
      context: .
      dockerfile: Dockerfile.db-setup
    container_name: locationsearch-db-setup
    restart: "no"
    environment:
      - NODE_ENV=production
    volumes:
      - ./config/.env.production:/app/config/.env.production
    networks:
      - locationsearch-network
    depends_on:
      - mysql
    # Adding a healthcheck for MySQL before proceeding
    command: >
      sh -c "
        echo 'Waiting for MySQL...' &&
        for i in {1..30}; do nc -z mysql 3306 && break || sleep 1; done &&
        echo 'Running database migrations and seeding...' &&
        npm run migrate:production && npm run db:seed:production
      "

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: locationsearch-api
    restart: always
    ports:
      - "8081:8081"
    environment:
      - NODE_ENV=production
      - PORT=8081
    depends_on:
      - mysql
      - db-setup
    volumes:
      - ./config/.env.production:/app/config/.env.production
    networks:
      - locationsearch-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: locationsearch
      MYSQL_USER: localtionsearch
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - locationsearch-network
    command: --default-authentication-plugin=mysql_native_password

volumes:
  mysql_data:

networks:
  locationsearch-network:
    driver: bridge